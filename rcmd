#!/bin/bash

text(){
    pt[connectionError]="Falha na conexão com a rede\nVerifique isso e tente novamente!"
    pt[rootUserError]="Você precisa executar este programa logado como root\nUse sudo rcmd"
    pt[gitInstalledError]="git não está instalado e o programa depende de para funcionar.\nDeseja instalar ele? [s/n]"
    pr[invalidOption]="Opção Inválida!"
    pt[exitting]="Saindo..."
    
    en[connectionError]="Failed to connect to the network\nCheck this and try again!"
    en[rootUserError]="You need to run this program logged in as root\nUse sudo rcmd"
    en[gitInstalledError]="git is not installed and the program depends on it to work.\nDo you want to install it? [y/n]"
    en[invalidOption]="Invalid Option!"
    en[exitting]="Exitting..."
    
    if [ "$LANGUAGE" = "pt_BR" ];then
        echo -e ${pt[$1]}"\n"
        else
            echo -e ${en[$1]}"\n"
    fi
}


cd "$HOME" || exit

check_connection=$(ping -w 1 githubstatus.com)
check_rootUsers=$UID
check_git=$(which git)
pull=true

echo "$check_connection"
if [ -z $check_connection ];then
    text connectionError
    exit
fi

if [ -z "$check_git" ];then
    text gitInstalledError
    read -r installGit="Y"
    if [ "$installGit" == "Y" -o "$installGit" == "y" ];then
        sudo apt install git -y
    elif [ "$installGit" = "n" ];then
        text exitting
        sleep 1
        exit
    else
        text invalidOption
        text exitting
        sleep 1
    fi
fi

git config --global user.name "$2"
git config --global user.email "$3"

if [ -d "cmd" ]; then
    echo "directory cmd exists"
    else
        mkdir "$HOME/cmd"
        touch comando "$HOME/cmd"
        echo "" > "$HOME/cmd/comando"
        touch rcmd.log "$HOME/cmd"
        echo " " > "$HOME/cmd/rcmd.log"
        cd "$HOME/cmd" || exit
        
        git init
        git add .
        git add comando rcmd.log
        git commit -m "First commit"
        gh repo create -s . --private
        git remote add origin "https://github.com/$2/cmd.git"
        git push -u origin master
fi

cd "$HOME" || exit
while true;do
    sleep "$1"
    cd "$HOME/cmd" || exit
    git init > /dev/null
    git pull origin master > /dev/null
    echo "" > ./rcmd.log
    cmd=$(cat "$HOME"/cmd/comando)
    if [ "$cmd" == "exit" ];then
        break
    fi
    date=$(date)
    
    echo -e "\n* $date" >> ./rcmd.log
    $cmd >> ./rcmd.log 
    
    git add rcmd.log > /dev/null
    git commit -m "commit" > /dev/null
    git push -u origin master > /dev/null
    
done

